pipeline TemperatureDataPipeline {

    block DataZipExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block ZipArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block DataCsvFilePicker oftype FilePicker {
        path: "/data.csv";
    }

    block DataCsvTextFileInterpreter oftype TextFileInterpreter { }
    block CsvFileInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }



    block DataTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "Geraet" oftype integer,
            "Hersteller" oftype text,
            "Model" oftype text,
            "Monat" oftype integer,
            "Temperatur in °C (DWD)" oftype decimal,
            "Batterietemperatur in °C" oftype decimal,
            "Geraet aktiv" oftype text
        ];
    }





    transform RenameTransform {
        from OldName oftype text;
        to NewName oftype text;
        NewName: OldName;
    }
    block RenameTemperaturColumnTransformer oftype TableTransformer {
        inputColumns: ['Temperatur in °C (DWD)'];
        outputColumn: 'Temperatur';
        use: RenameTransform;
    }
    block RenameBatterietemperaturColumnTransformer oftype TableTransformer {
        inputColumns: ['Batterietemperatur in °C'];
        outputColumn: 'Batterietemperatur';
        use: RenameTransform;
    }
    block UnwantedColumnsDeleter oftype ColumnDeleter {
        delete: [column L, column M, column N, column O]; 
    }




    transform CelsiusToFahrenheit {
        from Celsius oftype decimal;
        to Fahrenheit oftype decimal;
        Fahrenheit: (Celsius * 9/5) + 32;
    }

    block TemperaturCelsiusToFahrenheitTransformer oftype TableTransformer {
        inputColumns: ['Temperatur in °C (DWD)'];
        outputColumn: 'Temperatur';
        use: CelsiusToFahrenheit;
    }

    block BatterietemperaturCelsiusToFahrenheitTransformer oftype TableTransformer {
        inputColumns: ['Batterietemperatur in °C'];
        outputColumn: 'Batterietemperatur';
        use: CelsiusToFahrenheit;
    }





    block LoadIntoSQLite oftype SQLiteLoader {
        table: "temperatures";
        file: "./temperatures.sqlite";
    }


    DataZipExtractor 
        -> ZipArchiveInterpreter 
        -> DataCsvFilePicker 
        -> DataCsvTextFileInterpreter 
        -> CsvFileInterpreter 
        -> DataTableInterpreter 
        -> TemperaturCelsiusToFahrenheitTransformer 
        -> BatterietemperaturCelsiusToFahrenheitTransformer 
        -> LoadIntoSQLite;
}
