pipeline TemperatureDataPipeline {

    block DataZipExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block ZipArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block DataCsvFilePicker oftype FilePicker {
        path: "/data.csv";
    }


    block CsvInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }


    block DataCsvTextInterpreter oftype TextFileInterpreter { }


    block DataTableInterpreter oftype TableInterpreter {
        header: false;
        columns: [
            "Geraet" oftype GeraetId,
            "Hersteller" oftype text,
            "Model" oftype text,
            "Monat" oftype MonatValue,
            "Temperatur" oftype decimal,
            "Batterietemperatur" oftype decimal,
            "Geraet aktiv" oftype text
        ];
    }


    block UnwantedColumnsDeleter oftype ColumnDeleter {
        delete: [column F, column G, column H, column I]; 
    }


    transform CelsiusToFahrenheit {
        from Celsius oftype decimal;
        to Fahrenheit oftype decimal;
        Fahrenheit: (Celsius * 9/5) + 32;
    }

    block TemperaturCelsiusToFahrenheitTransformer oftype TableTransformer {
        inputColumns: ['Temperatur'];
        outputColumn: 'Temperatur';
        use: CelsiusToFahrenheit;
    }

    block BatterietemperaturCelsiusToFahrenheitTransformer oftype TableTransformer {
        inputColumns: ['Batterietemperatur'];
        outputColumn: 'Batterietemperatur';
        use: CelsiusToFahrenheit;
    }



    valuetype GeraetId oftype integer {
        constraints: [GeraetIdConstraint];
    }

    constraint GeraetIdConstraint on integer:
        value > 0;


    valuetype MonatValue oftype integer {
        constraints: [MonatConstraint];
    }

    constraint MonatConstraint on integer:
        value >= 1 and value <= 12;



    block LoadIntoSQLite oftype SQLiteLoader {
        table: "temperatures";
        file: "./temperatures.sqlite";
    }


    DataZipExtractor 
        -> ZipArchiveInterpreter 
        -> DataCsvFilePicker 
        -> DataCsvTextInterpreter 
        -> CsvInterpreter
        -> DataTableInterpreter 
        -> UnwantedColumnsDeleter
        -> TemperaturCelsiusToFahrenheitTransformer 
        -> BatterietemperaturCelsiusToFahrenheitTransformer 
        -> LoadIntoSQLite;
}
